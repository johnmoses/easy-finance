# Finance
query accountCategoryList (
    $search: String
    $first: Int
    $last: Int
    $after: String
    $before: String
) {
  accountcategories(
    search: $search
    first: $first
    last: $last
    after: $after
    before: $before
  ) {
    count
    pageInfo {
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
    }
    edges {
      cursor
      node {
        id
        name
        description
        categoryAccounts {
          count
        }
      }
    }
  }
}

query accountCategorySelect (
  $id: ID!
) {
  accountcategory(id: $id) {
    id
    name
    description
    categoryAccounts {
      count
    }
  }
}

mutation accountCategoryCreate (
  $name: String
  $description: String
) {
  accountCategoryCreate(
    input: {
      name: $name
      description: $description
    }
  ) {
    category {
      id
    }
  }
}

mutation accountCategoryUpdate (
  $id: ID!
  $name: String
  $description: String
) {
  accountCategoryUpdate(
    input: {
      id: $id
      name: $name
      description: $description
    }
  ) {
    category {
      id
    }
  }
}

mutation accountCategoryDelete ($id: ID!, $isDeleted: Boolean) {
  accountCategoryDelete(input: { id: $id, isDeleted: false }) {
    category {
      id
    }
  }
}

mutation accountCategoryRemove ($id: ID! ) {
  accountCategoryRemove(input: { id: $id }) {
    category {
      id
    }
  }
}

query accountList (
    $search: String
    $first: Int
    $last: Int
    $after: String
    $before: String
) {
  accounts(
    search: $search
    first: $first
    last: $last
    after: $after
    before: $before
    ) {
    count
    pageInfo {
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
    }
    edges {
      cursor
      node {
        id
        balance
        currency
        createdAt
        isModified
        modifiedAt
        isDeleted
        deletedAt
        restoredAt
        user {
          id
          username
        }
        category {
          id
          name
        }
      }
    }
  }
}

query accountSelect($id: ID!) {
  account(id: $id) {
    id
    balance
    currency
    createdAt
    isModified
    modifiedAt
    isDeleted
    deletedAt
    restoredAt
    user {
        id
        username
      }
    category {
      id
      name
    }
  }
}

mutation accountCreate(
    $categoryId: ID!
    $currency: String
) {
  accountCreate(
    input: {
      categoryId: $categoryId
      currency: $currency
    }
  ) {
    account {
      id
    }
  }
}

mutation accountUpdate (
    $id: ID!
    $categoryId: ID!
    $currency: String
) {
  accountUpdate(
    input: {
      id: $id
      categoryId: $categoryId
      currency: $currency
    }
  ) {
    account {
      id
    }
  }
}

mutation accountDelete ($id: ID!, $isDeleted: Boolean) {
  accountDelete(input: { id: $id, isDeleted: false }) {
    account {
      id
    }
  }
}

mutation accountRemove($id: ID!) {
  accountRemove(input: { id: $id }) {
    account {
      id
    }
  }
}

# Transactions
query transactionList (
  $search: String
  $first: Int
  $last: Int
  $after: String
  $before: String
) {
  transactions (
    search: $search
    first: $first
    last: $last
    after: $after
    before: $before
  ) {
    count
    pageInfo {
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
    }
    edges {
      cursor
      node {
        id
        amount
        description
        createdAt
        account {
          id
          balance
          currency
          user {
            id
            username
          }
          category {
            id
            name
          }
        }
      }
    }
  }
}

query transactionSelect ($id: ID!) {
  transaction(id: $id) {
    id
    amount
    description
    createdAt
    account {
      id
      balance
      currency
      user {
        id
        username
      }
      category {
        id
        name
      }
    }
  }
}

mutation transactionCreate (
    $accountId: ID!
    $amount: Float
    $description: String
) {
  transactionCreate(
    input: {
      accountId: $accountId
      amount: $amount
      description: $description
    }
  ) {
    transaction {
      id
    }
  }
}

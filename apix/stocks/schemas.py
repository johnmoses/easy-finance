from marshmallow import Schema, fields

class StockSchema(Schema):
    id = fields.Int(dump_only=True)
    symbol = fields.String()
    name = fields.String()
    description = fields.String()
    exchange = fields.String()
    created_at = fields.DateTime()
    modified_at = fields.DateTime()

class StockPriceSchema(Schema):
    id = fields.Int(dump_only=True)
    open = fields.Float()
    high = fields.Float()
    low = fields.Float()
    close = fields.Float()
    volume = fields.Float()
    description = fields.String()
    created_at = fields.DateTime()
    is_modified = fields.Boolean()
    modified_at = fields.DateTime()
    is_deleted = fields.Boolean()
    deleted_at = fields.DateTime()
    restored_at = fields.DateTime()
    stock_id = fields.Int()

class StrategySchema(Schema):
    id = fields.Int(dump_only=True)
    name = fields.String()
    perform_order = fields.Boolean()
    priority = fields.String()
    maximum_allocation = fields.Float()
    minimum_allocation = fields.Float()
    created_at = fields.DateTime()
    is_modified = fields.Boolean()
    modified_at = fields.DateTime()
    is_deleted = fields.Boolean()
    deleted_at = fields.DateTime()
    restored_at = fields.DateTime()

# class StockStrategySchema(Schema):
#     id = fields.Int(dump_only=True)
#     created_at = fields.DateTime()
#     is_modified = fields.Boolean()
#     modified_at = fields.DateTime()
#     is_deleted = fields.Boolean()
#     deleted_at = fields.DateTime()
#     restored_at = fields.DateTime()
#     stock_id = fields.Int()
#     strategy_id = fields.Int()
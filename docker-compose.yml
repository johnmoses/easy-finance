version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    restart: always
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./docker/db/.env
    healthcheck:
      test: pg_isready -U postgres
    command:
      - "postgres"
      - "-c"
      - "max_connections=1024"
      - "-c"
      - "shared_buffers=1GB" # Lowered from 3GB for better compatibility with local dev environments
      - "-c"
      - "max_locks_per_transaction=1024"
 
  api:
    platform: linux/amd64
    restart: on-failure
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api/:/api
      - static:/api/app/static # Share static volume with nginx
      - media:/api/app/media   # Share media volume with nginx
    ports:
      - "5001:5001"
    env_file:
      - ./api/.env.dev
    depends_on:
      postgres:
        condition: service_healthy

  web:
    platform: linux/amd64
    restart: unless-stopped
    build:
      context: ./web
      dockerfile: Dockerfile
    volumes:
      - ./web/:/web
      - /web/node_modules
      - /web/.next
    ports:
      - "3000:3000"
    depends_on:
      - api

  nginx:
    image: nginx:1.23-alpine
    # The build context below is kept, assuming your Dockerfile adds custom configurations.
    # If not, you can remove the 'build' section.
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    restart: always
    volumes:
      - static:/api/app/static # Mount shared static volume
      - media:/api/app/media   # Mount shared media volume
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
      - web

volumes:
  postgres_data:
  static: 
  media:

